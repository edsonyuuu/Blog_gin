definitions:
  advert_api.AdvertRequest:
    properties:
      href:
        description: 跳转链接
        type: string
      images:
        description: 图片
        type: string
      is_show:
        description: 是否展示
        type: boolean
      title:
        description: 显示的标题
        type: string
    required:
    - href
    - images
    - title
    type: object
  ctype.ImageType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-comments:
      Local: 本地
      QiNiu: 七牛云
    x-enum-varnames:
    - Local
    - QiNiu
  ctype.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - PermissionAdmin
    - PermissionUser
    - PermissionVisitor
    - PermissionDisableUser
  ctype.SignStatus:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - SignQQ
    - SignGitee
    - SignEmail
  images_api.ImageResponse:
    properties:
      id:
        type: integer
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  images_api.ImageUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  menu_api.Banner:
    properties:
      id:
        type: integer
      path:
        type: string
    type: object
  menu_api.ImageSort:
    properties:
      image_id:
        type: integer
      sort:
        type: integer
    type: object
  menu_api.MenuNameResponse:
    properties:
      id:
        type: integer
      path:
        type: string
      title:
        type: string
    type: object
  menu_api.MenuRequest:
    properties:
      abstract:
        items:
          type: string
        type: array
      abstract_time:
        description: 切换的时间，单位秒
        type: integer
      banner_time:
        description: 切换的时间，单位秒
        type: integer
      image_sort_list:
        description: 具体图片的顺序
        items:
          $ref: '#/definitions/menu_api.ImageSort'
        type: array
      path:
        type: string
      slogan:
        type: string
      sort:
        description: 菜单的序号
        type: integer
      title:
        type: string
    required:
    - path
    - title
    type: object
  menu_api.MenuResponse:
    properties:
      abstract:
        description: 简介
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间
        type: integer
      banner_time:
        description: 菜单图片的切换时间 为 0 表示不切换
        type: integer
      banners:
        items:
          $ref: '#/definitions/menu_api.Banner'
        type: array
      created_at:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      path:
        description: 路径
        type: string
      slogan:
        description: slogan
        type: string
      sort:
        description: 菜单的顺序
        type: integer
      title:
        description: 标题
        type: string
    type: object
  message_api.Message:
    properties:
      content:
        description: 消息内容
        type: string
      created_at:
        description: 最新的消息时间
        type: string
      message_count:
        description: 消息条数
        type: integer
      rev_user_avatar:
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      rev_user_nick_name:
        type: string
      send_user_avatar:
        type: string
      send_user_id:
        description: 发送人id
        type: integer
      send_user_nick_name:
        type: string
    type: object
  message_api.MessageRequest:
    properties:
      content:
        description: 消息内容
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      send_user_id:
        description: 发送人id
        type: integer
    required:
    - content
    - rev_user_id
    - send_user_id
    type: object
  models.BannerModel:
    properties:
      created_at:
        description: 创建时间
        type: string
      hash:
        description: 图片的hash值，用于判断重复图片
        type: string
      id:
        description: 主键ID
        type: integer
      image_type:
        allOf:
        - $ref: '#/definitions/ctype.ImageType'
        description: 图片的类型， 本地还是七牛
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  models.MessageModel:
    properties:
      content:
        description: 消息内容
        type: string
      created_at:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      is_read:
        description: 接收方是否查看
        type: boolean
      rev_user_avatar:
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      rev_user_nick_name:
        type: string
      send_user_avatar:
        type: string
      send_user_id:
        description: 发送人id
        type: integer
      send_user_nick_name:
        type: string
    type: object
  models.RemoveRequest:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
  models.UserModel:
    properties:
      addr:
        description: 地址
        type: string
      avatar:
        description: 头像id
        type: string
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 主键ID
        type: integer
      integral:
        description: 我的积分
        type: integer
      ip:
        description: ip地址
        type: string
      link:
        description: 我的链接地址
        type: string
      nick_name:
        description: 昵称
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 权限  1 管理员  2 普通用户  3 游客
      sign:
        description: 我的签名
        type: string
      sign_status:
        allOf:
        - $ref: '#/definitions/ctype.SignStatus'
        description: 注册来源
      tel:
        description: 手机号
        type: string
      token:
        description: 其他平台的唯一id
        type: string
      user_name:
        description: 用户名
        type: string
    type: object
  res.ListResponse:
    properties:
      count:
        type: integer
      list: {}
    type: object
  res.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  tag_api.TagRequest:
    properties:
      title:
        description: 标题
        type: string
    required:
    - title
    type: object
  tag_api.TagResponse:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  user_api.BindEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  user_api.EmailLoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  user_api.UpdatePasswordRequest:
    properties:
      old_pwd:
        type: string
      pwd:
        type: string
    required:
    - old_pwd
    - pwd
    type: object
  user_api.UserCreateRequest:
    properties:
      nick_name:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 权限  1 管理员  2 普通用户  3 游客
      user_name:
        description: 用户名
        type: string
    required:
    - nick_name
    - password
    - role
    - user_name
    type: object
  user_api.UserRole:
    properties:
      nick_name:
        description: 防止用户昵称非法
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        enum:
        - 1
        - 2
        - 3
        - 4
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
  user_api.UserUpdateNickNameRequest:
    properties:
      link:
        type: string
      nick_name:
        type: string
      sign:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/adverts:
    delete:
      description: 批量删除广告
      parameters:
      - description: 广告id列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 批量删除广告
      tags:
      - 广告管理
    get:
      description: 广告列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 广告列表
      tags:
      - 广告管理
    post:
      description: 创建广告
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建广告
      tags:
      - 广告管理
  /api/adverts/:id:
    put:
      description: 更新广告
      parameters:
      - description: 广告的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 更新广告
      tags:
      - 广告管理
  /api/email_login:
    post:
      description: 邮箱登录，返回token，用户信息需要从token中解码
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 邮箱登录
      tags:
      - 用户管理
  /api/image:
    post:
      consumes:
      - multipart/form-data
      description: 上传单个图片，返回图片的url
      parameters:
      - description: 文件上传
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 上传单个图片，返回图片的url
      tags:
      - 图片管理
  /api/images:
    delete:
      description: 删除图片
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除图片
      tags:
      - 图片管理
    get:
      description: 图片列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses: {}
      summary: 图片列表
      tags:
      - 图片管理
    post:
      consumes:
      - multipart/form-data
      description: 上传多个图片，返回图片的url
      parameters:
      - description: 图片文件上传
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 上传多个图片，返回图片的url
      tags:
      - 图片管理
    put:
      description: 修改图片
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/images_api.ImageUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改图片
      tags:
      - 图片管理
  /api/images_names:
    get:
      description: 图片名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/images_api.ImageResponse'
                  type: array
              type: object
      summary: 图片名称列表
      tags:
      - 图片管理
  /api/logout:
    post:
      consumes:
      - application/json
      description: 根据提供的用户信息和令牌注销用户。
      parameters:
      - description: 访问令牌
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 注销用户
      tags:
      - 用户管理
  /api/menu_names:
    get:
      description: 获取菜单名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuNameResponse'
              type: object
      summary: 获取菜单名称列表
      tags:
      - 菜单管理
  /api/menus:
    delete:
      consumes:
      - application/json
      description: 根据请求的菜单ID列表删除菜单
      parameters:
      - description: 菜单ID列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除菜单
      tags:
      - 菜单管理
    get:
      consumes:
      - application/json
      description: 获取菜单列表及对应的横幅信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单列表
      tags:
      - 菜单管理
    post:
      consumes:
      - application/json
      description: 创建菜单并关联图片
      parameters:
      - description: 菜单请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建菜单
      tags:
      - 菜单管理
  /api/menus/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新菜单
      tags:
      - 菜单管理
  /api/menus/detail:
    get:
      description: 菜单详情,根据路径查
      parameters:
      - in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuResponse'
              type: object
      summary: 菜单详情,根据路径查
      tags:
      - 菜单管理
  /api/messages:
    get:
      description: 用户与他人的消息列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/message_api.Message'
                  type: array
              type: object
      summary: 用户与他人的消息列表
      tags:
      - 消息管理
    post:
      consumes:
      - application/json
      description: 创建新的消息并发送给接收人
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 消息请求体
        in: body
        name: messageRequest
        required: true
        schema:
          $ref: '#/definitions/message_api.MessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建消息
      tags:
      - 消息管理
  /api/messages_all:
    get:
      description: 消息列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 消息列表
      tags:
      - 消息管理
  /api/messages_record:
    get:
      description: 用户的消息记录
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.MessageModel'
                  type: array
              type: object
      summary: 用户的消息记录
      tags:
      - 消息管理
  /api/qq_login_path:
    get:
      description: 获取qq登录的跳转链接，data就是qq的跳转地址
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 获取qq登录的跳转链接
      tags:
      - 用户管理
  /api/tag_names:
    get:
      description: 标签名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/tag_api.TagResponse'
                  type: array
              type: object
      summary: 标签名称列表
      tags:
      - 标签管理
  /api/tags:
    delete:
      description: 批量删除标签
      parameters:
      - description: 标签id列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 批量删除标签
      tags:
      - 标签管理
    get:
      description: 标签列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 标签列表
      tags:
      - 标签管理
    post:
      description: 创建标签
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建标签
      tags:
      - 标签管理
  /api/tags/:id:
    put:
      description: 更新标签
      parameters:
      - description: 标签的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 更新标签
      tags:
      - 标签管理
  /api/user_bind_email:
    post:
      description: 用户绑定邮箱
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.BindEmailRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户绑定邮箱
      tags:
      - 用户管理
  /api/user_info:
    get:
      description: 用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserModel'
              type: object
      summary: 用户信息
      tags:
      - 用户管理
    put:
      description: 修改当前登录人的昵称，签名，链接
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 昵称，签名，链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdateNickNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改当前登录人的昵称，签名，链接
      tags:
      - 用户管理
  /api/user_password:
    put:
      consumes:
      - application/json
      description: 更新用户的密码
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 请求体参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user_api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新用户密码
      tags:
      - 用户管理
  /api/user_role:
    put:
      consumes:
      - application/json
      description: 根据用户ID修改用户的权限和昵称
      parameters:
      - description: 用户权限信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user_api.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改用户权限
      tags:
      - 用户管理
  /api/users:
    delete:
      consumes:
      - application/json
      description: 根据传入的用户ID列表删除对应的用户和相关信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 用户ID列表
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除用户
      tags:
      - 用户管理
    get:
      description: 用户列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 创建用户参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建用户
      tags:
      - 用户管理
  /menu/{id}:
    get:
      description: 根据菜单ID获取菜单详情和相关横幅信息
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuResponse'
              type: object
      summary: 获取菜单详情
      tags:
      - 菜单管理
swagger: "2.0"
